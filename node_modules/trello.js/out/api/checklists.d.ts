import * as Parameters from './parameters';
import { Client } from '../clients';
import { Callback } from '../types';
export declare class Checklists {
    private client;
    constructor(client: Client);
    createChecklist<T = unknown>(parameters: Parameters.CreateChecklist, callback: Callback<T>): Promise<void>;
    createChecklist<T = unknown>(parameters: Parameters.CreateChecklist, callback?: never): Promise<T>;
    getChecklist<T = unknown>(parameters: Parameters.GetChecklist, callback: Callback<T>): Promise<void>;
    getChecklist<T = unknown>(parameters: Parameters.GetChecklist, callback?: never): Promise<T>;
    /** Update an existing checklist. */
    updateChecklist<T = unknown>(parameters: Parameters.UpdateChecklist, callback: Callback<T>): Promise<void>;
    /** Update an existing checklist. */
    updateChecklist<T = unknown>(parameters: Parameters.UpdateChecklist, callback?: never): Promise<T>;
    /** Delete a checklist */
    deleteChecklist<T = unknown>(parameters: Parameters.DeleteChecklist, callback: Callback<T>): Promise<void>;
    /** Delete a checklist */
    deleteChecklist<T = unknown>(parameters: Parameters.DeleteChecklist, callback?: never): Promise<T>;
    getChecklistField<T = unknown>(parameters: Parameters.GetChecklistField, callback: Callback<T>): Promise<void>;
    getChecklistField<T = unknown>(parameters: Parameters.GetChecklistField, callback?: never): Promise<T>;
    updateChecklistField<T = unknown>(parameters: Parameters.UpdateChecklistField, callback: Callback<T>): Promise<void>;
    updateChecklistField<T = unknown>(parameters: Parameters.UpdateChecklistField, callback?: never): Promise<T>;
    getChecklistBoard<T = unknown>(parameters: Parameters.GetChecklistBoard, callback: Callback<T>): Promise<void>;
    getChecklistBoard<T = unknown>(parameters: Parameters.GetChecklistBoard, callback?: never): Promise<T>;
    getChecklistCards<T = unknown>(parameters: Parameters.GetChecklistCards, callback: Callback<T>): Promise<void>;
    getChecklistCards<T = unknown>(parameters: Parameters.GetChecklistCards, callback?: never): Promise<T>;
    getChecklistCheckItems<T = unknown>(parameters: Parameters.GetChecklistCheckItems, callback: Callback<T>): Promise<void>;
    getChecklistCheckItems<T = unknown>(parameters: Parameters.GetChecklistCheckItems, callback?: never): Promise<T>;
    createChecklistCheckItems<T = unknown>(parameters: Parameters.CreateChecklistCheckItems, callback: Callback<T>): Promise<void>;
    createChecklistCheckItems<T = unknown>(parameters: Parameters.CreateChecklistCheckItems, callback?: never): Promise<T>;
    getChecklistCheckItem<T = unknown>(parameters: Parameters.GetChecklistCheckItem, callback: Callback<T>): Promise<void>;
    getChecklistCheckItem<T = unknown>(parameters: Parameters.GetChecklistCheckItem, callback?: never): Promise<T>;
    /** Remove an item from a checklist */
    deleteChecklistCheckItem<T = unknown>(parameters: Parameters.DeleteChecklistCheckItem, callback: Callback<T>): Promise<void>;
    /** Remove an item from a checklist */
    deleteChecklistCheckItem<T = unknown>(parameters: Parameters.DeleteChecklistCheckItem, callback?: never): Promise<T>;
}
