import { AxiosError, AxiosRequestConfig } from 'axios';
export interface Config {
    key: string;
    token: string;
    baseRequestConfig?: Config.BaseRequestConfig;
    middlewares?: Config.Middlewares;
    /** @deprecated */
    telemetry?: Config.Telemetry;
}
export declare namespace Config {
    type Error = AxiosError;
    type BaseRequestConfig = AxiosRequestConfig;
    /** @deprecated */
    type Telemetry = any;
    interface Middlewares {
        onError?: Config.Middlewares.OnErrorHandler;
        onResponse?: Config.Middlewares.OnResponseHandler;
    }
    namespace Middlewares {
        type OnErrorHandler = (error: Config.Error) => void;
        type OnResponseHandler<T = unknown> = (data: T) => void;
    }
}
